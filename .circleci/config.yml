version: 2.1

parameters:
  flutter-version:
    type: string
    default: "2.8.1"

orbs:
  flutter: circleci/flutter@1.0.1
  browser-tools: circleci/browser-tools@1.2.3
  codecov: codecov/codecov@3.2.2 # requires env var CODECOV_TOKEN

executors:
  cirrusci-flutter:
    docker:
      # has flutter preinstalled, but otherwise very minimalistic (see https://hub.docker.com/r/cirrusci/flutter/)
      - image: cirrusci/flutter:<< pipeline.parameters.flutter-version >>
  circleci-android-with-browsers:
    docker:
      - image: cimg/android:2021.10.2-browsers # has browsers (including chromedriver) preinstalled

jobs:
  build-and-deploy:
    executor: cirrusci-flutter
    steps:
      - checkout
      #- flutter/install_sdk:
      #    version: << pipeline.parameters.flutter-version >>
      - flutter/install_pub
      - run:
          name: Build web
          command: flutter build web --web-renderer html
      - run:
          name: Compress Artifacts
          command: zip -r ../web.zip .
          working_directory: build/web
      - store_artifacts:
          path: build/web.zip

      - add_ssh_keys
      - run:
          name: Deploy to GitHub Pages
          command: bash -x .circleci/deploy-gh-pages.sh

  run-widget-tests:
    executor: cirrusci-flutter
    steps:
      - checkout
      - flutter/install_pub
      - run:
          name: Create reports directory
          command: mkdir reports
      - run:
          name: Set up dummy coverage test
          # so that files not touched in the actual tests are not left out of the report
          # see https://github.com/flutter/flutter/issues/27997
          command: sh -x .circleci/generate_coverage_helper.sh
      - run:
          name: Run Widget tests
          # creates test report (reports/tests.jsonl) and coverage report (coverage/lcov.info)
          command: flutter test --coverage --reporter json > reports/tests.jsonl

      #################### TEST RESULTS #######################
      - store_artifacts:
          # regarding format, see https://github.com/dart-lang/test/blob/master/pkgs/test/doc/json_reporter.md
          path: reports/tests.jsonl
      - run:
          name: Generate JUnit XML report
          # see https://pub.dev/packages/junitreport
          command: flutter pub run junitreport:tojunit -i reports/tests.jsonl -o reports/tests.xml
      - store_test_results:
          path: reports/tests.xml
      - store_artifacts:
          path: reports/tests.xml

      #################### COVERAGE #######################
      - store_artifacts:
          path: coverage/lcov.info
      - run:
          name: Set up GPG agent (for codecov signature verification)
          command: sudo apt-get -y update && sudo apt-get -y install gpg-agent
      - codecov/upload:
          file: coverage/lcov.info

  run-integration-tests:
    executor: cirrusci-flutter
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          install-firefox: false # if firefox is needed, install jq first: `sudo apt-get -y update && sudo apt-get -y install jq`
          install-geckodriver: false
      - flutter/install_pub
      - run:
          name: Start chromedriver
          command: chromedriver --port=4444 # default port used by `flutter drive`
          background: true
      - run:
          name: Run Integration tests
          # `flutter drive` does not support machine-readable reports
          # regarding coverage see also https://stackoverflow.com/questions/57933204/flutter-driver-test-coverage-report
          command: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/demo_test.dart -d web-server --web-renderer html

  analyze:
    executor: cirrusci-flutter
    steps:
      - checkout
      - flutter/install_pub
      - run:
          name: Create reports directory
          command: mkdir reports
      - run:
          name: Run static analysis
          # for now, do not treat infos and warnings as job failure
          command: flutter analyze --write=reports/static_analysis.txt --no-fatal-infos --no-fatal-warnings
      - store_artifacts:
          path: reports/static_analysis.txt
      # TODO run dart_code_metrics

workflows:
  test-and-build:
    jobs:
      - run-widget-tests
      - run-integration-tests
      - analyze
      - build-and-deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - run-widget-tests
            - run-integration-tests
            - analyze
